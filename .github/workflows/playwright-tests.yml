name: Playwright Tests

# Trigger the workflow on push to main/master branch and pull requests
on:
  push:
    branches: 
      - main
      - master
      - develop
  pull_request:
    branches: 
      - main
      - master
      - develop
  # Allow manual workflow dispatch
  workflow_dispatch:

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        # Run tests on multiple Node.js versions
        node-version: [18, 20]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
    
    - name: Run Playwright tests
      run: npx playwright test
      env:
        # Set environment variables if needed
        CI: true
    
    - name: Upload Playwright Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report-node${{ matrix.node-version }}
        path: playwright-report/
        retention-days: 30
    
    - name: Upload Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-node${{ matrix.node-version }}
        path: test-results/
        retention-days: 30

  # Job for headless tests (faster execution)
  test-headless:
    timeout-minutes: 45
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
    
    - name: Run Playwright tests (Headless)
      run: npx playwright test --reporter=github
      env:
        CI: true

  # Job for running tests on Windows (if needed)
  test-windows:
    timeout-minutes: 60
    runs-on: windows-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
    
    - name: Run Playwright tests on Windows
      run: npx playwright test
      env:
        CI: true
    
    - name: Upload Windows Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report-windows
        path: playwright-report/
        retention-days: 30

  # Job for security and performance monitoring
  security-scan:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run security audit
      run: npm audit --audit-level=moderate
      continue-on-error: true
    
    - name: Install Playwright
      run: npx playwright install --with-deps
    
    - name: Run security tests only
      run: npx playwright test tests/security.spec.js
      env:
        CI: true

  # Job for notifications (optional)
  notify:
    runs-on: ubuntu-latest
    needs: [test, test-headless]
    if: always() && github.ref == 'refs/heads/main'
    
    steps:
    - name: Notify on success
      if: needs.test.result == 'success' && needs.test-headless.result == 'success'
      run: |
        echo "✅ All Playwright tests passed successfully!"
        echo "Test results are available in the artifacts."
    
    - name: Notify on failure
      if: needs.test.result == 'failure' || needs.test-headless.result == 'failure'
      run: |
        echo "❌ Some Playwright tests failed!"
        echo "Check the test reports in artifacts for details."
        exit 1
